apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    signingConfigs {
        release {
            keyAlias 'facepp'
            keyPassword 'xfdq1016'
            storeFile file(project.rootDir.absolutePath + '/facepp.keystore')
            storePassword 'xfdq1016'
        }
    }

    def ABILITY_STRING = "\"all\""
    defaultConfig {
        applicationId "com.megvii.beautifya"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 102
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String","FEA_ABILITY", "${ABILITY_STRING}")

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libMegviiBeautify-jni.so'
        pickFirst 'lib/arm64-v8a/libMegviiBeautifyImage.so'
        pickFirst 'lib/armeabi-v7a/libMegviiBeautify-jni.so'
    }

//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['src/main/jniLibs']
//            assets.srcDirs = ['assets']
//        }
//    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }


    lintOptions {
        abortOnError false
    }

}

//编译工程并将aar复制到根目录/app／libs文件夹里
task bd() {
    doLast {
        println 'build project'
        delete 'libs'
    }
    dependsOn clean
    dependsOn build

}
build.mustRunAfter clean

task copyFiles() {
    doLast {
        println 'copy files'
        copy {
            from "../megviibeautyjni/build/outputs/aar/megviibeautyjni-release.aar"
            into "libs"
            rename {
                String fileName ->
                    "megviibeauty.aar"
            }
        }
    }
    dependsOn bd
}

task release() {
    dependsOn copyFiles
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('io.reactivex:rxandroid:1.2.1') {
        exclude module: 'rxjava'
    }
    implementation 'uk.co.ribot:easyadapter:1.5.0@aar'
    implementation 'com.android.support:appcompat-v7:25.3.1'
    implementation 'io.reactivex:rxjava:1.1.9'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.android.support:support-v4:25.3.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:recyclerview-v7:25.3.1'
    implementation 'uk.co.ribot:easyadapter:1.5.0@aar'
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    implementation project(':megviibeautyjni')
//    compile(name:'megviibeauty', ext:'aar')
}
